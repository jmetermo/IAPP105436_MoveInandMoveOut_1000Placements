<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Movein_TF" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Movein_TF" enabled="true"/>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/campaign-service/secure/campaign/${cmpid}/moving/packageBuyDetailList" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;selection&quot;:{&quot;all&quot;:true, &quot;nodes&quot;:[], &quot;filter&quot;:{&quot;op&quot;:&quot;and&quot;, &quot;filters&quot;:[{&quot;op&quot;:&quot;and&quot;, &quot;fields&quot;:[{&quot;op&quot;:&quot;eq&quot;, &quot;id&quot;:&quot;onMediaPlan&quot;, &quot;value&quot;:&quot;true&quot;}], &quot;alwaysApplied&quot;:true}]}, &quot;group&quot;:[{&quot;id&quot;:&quot;buyDetail&quot;, &quot;dir&quot;:&quot;asc&quot;},{&quot;id&quot;:&quot;supplierSite&quot;, &quot;dir&quot;:&quot;asc&quot;}], &quot;entity&quot;:&quot;Placement&quot;}, &quot;actionType&quot;:&quot;validate&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/campaign-service/secure/campaign/${cmpid}/moving/packageBuyDetailList</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">${__P(includecontroller.prefix)}/TestFragments/TestData/${__P(env_name)}/${key}/BuyDetail.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${protocol}://${server}/idesk/mediaplan/?osPspId=prsm-cm-plpb&amp;osCmpId=40007&amp;osEndpointUrl=${protocol}%3A%2F%2F${server}&amp;osViewportVersion=1.28.4&amp;osResourceUrl=${protocol}%3A%2F%2Fpub-resource-viewport-prsmqa2.mediaocean.com%2F&amp;osLang=22&amp;osVref=${protocol}%3A%2F%2F${server}%2Fviewport-home%2F&amp;os-pid=prsm-cm-plpb&amp;os-cid=40007&amp;campaign-id=${pubid}</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="BuyDetail RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">buydetail</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;buyDetailList&quot;:([^&quot;]+)&quot;id&quot;:(\d{0,10})</stringProp>
            <stringProp name="RegexExtractor.template">$2$</stringProp>
            <stringProp name="RegexExtractor.default">Buy Detail Id is not found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SupplierName RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">supplierName</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;supplierName&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Supplier Name Is Not found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SupplierCode RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">supplierCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;supplierCode&quot;:&quot;(\d+)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Supplier Code Is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="BusinessKey RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessKey</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;supplierName&quot;:&quot;(.*?)&quot;,&quot;businessKey&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$2$</stringProp>
            <stringProp name="RegexExtractor.default">Businesskey Is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ActiveStartDate RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">activestartDate</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;activeStartDate&quot;:&quot;(\d+[-]\d+[-]\d+)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">activeStartDate Is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ActiveEndDate RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">activeendDate</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;activeEndDate&quot;:&quot;(\d+[-]\d+[-]\d+)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">activeEndDate Is Not found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="estimateEndDate RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">estimateendDate</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;estimateEndDate&quot;:&quot;(\d+[-]\d+[-]\d+)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Estimate End Date is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="EstimateStartDate RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">estimateStartDate</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;estimateStartDate&quot;:&quot;(\d+[-]\d+[-]\d+)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Estimate Start Date Is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="EstimateCode RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">estimateCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;estimateCode&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Estimate Code is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ClientId RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">clientId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;client&quot;:{&quot;id&quot;:(\d+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Client Id is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="clientBusinessKey RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">clientBusinessKey</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;client&quot;:([^&quot;]+)&quot;id&quot;:(\d+),&quot;clientCode&quot;:&quot;(.*?)&quot;,&quot;clientName&quot;:&quot;(.*?)&quot;,&quot;businessKey&quot;:&quot;(\w+)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$5$</stringProp>
            <stringProp name="RegexExtractor.default">clientBusinessKey Is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="estimateid RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">estimateid</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;estimate&quot;:{&quot;id&quot;:(\d+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Estimate Id Is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ProductId RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">productId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;product&quot;:{&quot;id&quot;:(\d+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">ProductId Is Not found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Supplier Id RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">supplierId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;supplier&quot;:{&quot;id&quot;:(\d+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Supplier Id Is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="EstimateKey RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">estimateKey</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;estimate&quot;:([^&quot;]+)&quot;id&quot;:(\d+),&quot;estimateCode&quot;:&quot;(.*?)&quot;,&quot;estimateName&quot;:&quot;(.*?)&quot;,&quot;businessKey&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$5$</stringProp>
            <stringProp name="RegexExtractor.default">estimate Key Is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Product Business Key RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">pbk</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;product&quot;:([^&quot;]+)&quot;id&quot;:(\d+),&quot;productCode&quot;:&quot;(\w+)&quot;,&quot;productName&quot;:&quot;(\w+)&quot;,&quot;businessKey&quot;:&quot;(\w+)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$5$</stringProp>
            <stringProp name="RegexExtractor.default">Product Business Key is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">buyDetail</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;buyDetailList&quot;:([^&quot;]+)&quot;id&quot;:(\d+)</stringProp>
            <stringProp name="RegexExtractor.template">$2$</stringProp>
            <stringProp name="RegexExtractor.default">Buy Detail is not found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/campaign-service/secure/campaign/${cmpid}/placement/flighting" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;distribution&quot;:&quot;${distribution}&quot;,&quot;flightEnd&quot;:&quot;${flightEnd}&quot;,&quot;flightStart&quot;:&quot;${flightStart}&quot;,&quot;flighting&quot;:[],&quot;placementCost&quot;:{&quot;placementPackage&quot;:${placementPkg},&quot;campaignId&quot;:&quot;${cmpid}&quot;,&quot;placementId&quot;:&quot;${ids}&quot;,&quot;costMethod&quot;:&quot;${costMethod}&quot;,&quot;currencyType&quot;:&quot;${currencyType}&quot;,&quot;fieldToCalc&quot;:&quot;${fieldToCalc}&quot;,&quot;plannedCost&quot;:&quot;1000&quot;,&quot;rate&quot;:&quot;1000&quot;,&quot;unitType&quot;:&quot;${unitType}&quot;,&quot;units&quot;:&quot;1000&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/campaign-service/secure/campaign/${cmpid}/placement/flighting</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${protocol}://${server}/idesk/mediaplan/?osPspId=prsm-cm-plpb&amp;osCmpId=40007&amp;osEndpointUrl=${protocol}%3A%2F%2F${__P(env_name)}-prisma-ny.mediaocean.com&amp;osViewportVersion=1.28.4&amp;osResourceUrl=${protocol}%3A%2F%2Fpub-resource-viewport-prsm${__P(env_name)}.mediaocean.com%2F&amp;osLang=22&amp;osVref=${protocol}%3A%2F%2F${__P(env_name)}-prisma-ny.mediaocean.com%2Fviewport-home%2F&amp;os-pid=prsm-cm-plpb&amp;os-cid=40007&amp;campaign-id=${pubid}</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">${__P(includecontroller.prefix)}/TestFragments/TestData/${__P(env_name)}/${key}/Flighting.csv</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
          </CSVDataSet>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">flighting</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;flighting&quot;:([^&quot;]+)(.*)</stringProp>
            <stringProp name="RegexExtractor.template"></stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/campaign-service/secure/campaign/${cmpid}/moving/packageBuyDetailList" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;selection&quot;:{&quot;all&quot;:true, &quot;nodes&quot;:[], &quot;filter&quot;:{&quot;op&quot;:&quot;and&quot;, &quot;filters&quot;:[{&quot;op&quot;:&quot;and&quot;, &quot;fields&quot;:[{&quot;op&quot;:&quot;eq&quot;, &quot;id&quot;:&quot;onMediaPlan&quot;, &quot;value&quot;:&quot;true&quot;}], &quot;alwaysApplied&quot;:true}]}, &quot;group&quot;:[{&quot;id&quot;:&quot;buyDetail&quot;, &quot;dir&quot;:&quot;asc&quot;},{&quot;id&quot;:&quot;supplierSite&quot;, &quot;dir&quot;:&quot;asc&quot;}], &quot;entity&quot;:&quot;Placement&quot;},&quot;package&quot;:{&quot;isIOsentForSearchOrder&quot;:false,&quot;isPostImpressionConversionsTagIncluded&quot;:false,&quot;publisherPaid&quot;:false,&quot;canChangeAdserver&quot;:true,&quot;commissionable&quot;:true,&quot;isDuplicate&quot;:false,&quot;onMediaPlan&quot;:false,&quot;primaryPlacement&quot;:false,&quot;richMediaAccepted&quot;:false,&quot;richMediaFeeIncluded&quot;:false,&quot;thirdPartyAdserver&quot;:true,&quot;thirdPartyAdserverInstanceId&quot;:&quot;3813&quot;,&quot;activeFlightEnd&quot;:&quot;2017-12-31&quot;,&quot;activeFlightStart&quot;:&quot;2017-01-01&quot;,&quot;buyCategory&quot;:&quot;Standard&quot;,&quot;capCost&quot;:&quot;Monthly&quot;,&quot;costMethod&quot;:&quot;CPM&quot;,&quot;currencyCode&quot;:&quot;N/A&quot;,&quot;distribution&quot;:&quot;Even&quot;,&quot;flightEnd&quot;:&quot;2017-12-31&quot;,&quot;flightStart&quot;:&quot;2017-01-01&quot;,&quot;packageType&quot;:&quot;Package&quot;,&quot;placementName&quot;:&quot;&quot;,&quot;placementType&quot;:&quot;Display&quot;,&quot;section&quot;:&quot;&quot;,&quot;site&quot;:&quot;GOOGLE.COM&quot;,&quot;supplierCode&quot;:&quot;USSJI09000023&quot;,&quot;supplierSite&quot;:&quot;GOOGLE.COM&quot;,&quot;target&quot;:&quot;&quot;,&quot;unitType&quot;:&quot;Impressions&quot;,&quot;placementActionTags&quot;:[],&quot;placementBuyDetails&quot;:[{&quot;campaignBuyDetailId&quot;:&quot;${buyDetail}&quot;,&quot;buyDetail&quot;:{&quot;activeEndDate&quot;:&quot;2017-12-31&quot;,&quot;activeStartDate&quot;:&quot;2017-01-01&quot;,&quot;buyType&quot;:&quot;Display&quot;,&quot;id&quot;:&quot;${buyDetail}&quot;,&quot;client&quot;:{&quot;dualCostEnabled&quot;:false,&quot;billingCurrency&quot;:&quot;&quot;,&quot;budgetCurrency&quot;:&quot;USD&quot;,&quot;businessKey&quot;:&quot;USSJI002&quot;,&quot;clientCode&quot;:&quot;002&quot;,&quot;clientName&quot;:&quot;AUTO-CLIENT-2&quot;,&quot;id&quot;:&quot;54236687&quot;},&quot;estimate&quot;:{&quot;businessKey&quot;:&quot;USSJI002001007&quot;,&quot;estimateCode&quot;:&quot;007&quot;,&quot;estimateEndDate&quot;:&quot;2017-12-31&quot;,&quot;estimateName&quot;:&quot;EST1-JAN1-DEC31-2017 - TEST&quot;,&quot;estimateStartDate&quot;:&quot;2017-01-01&quot;,&quot;id&quot;:&quot;4674670594&quot;},&quot;agencyMedia&quot;:{&quot;mediaCode&quot;:&quot;I&quot;,&quot;mediaName&quot;:&quot;Interactive&quot;,&quot;agencyId&quot;:&quot;1&quot;,&quot;id&quot;:&quot;1&quot;},&quot;product&quot;:{&quot;businessKey&quot;:&quot;USSJI002001&quot;,&quot;productCode&quot;:&quot;001&quot;,&quot;productName&quot;:&quot;AUTO-PD-1&quot;,&quot;id&quot;:&quot;1861440446&quot;}}}],&quot;customColumns&quot;:[],&quot;billableFlighting&quot;:[],&quot;flighting&quot;:[],&quot;adserverInstance&quot;:{&quot;canSelectConversionTags&quot;:true,&quot;canSelectSSL&quot;:true,&quot;capCostRequired&quot;:true,&quot;campaignNameLength&quot;:255,&quot;adserverDisplayName&quot;:&quot;DCM for SJ&quot;,&quot;adserverType&quot;:&quot;DCM&quot;,&quot;name&quot;:&quot;DCM for SJ&quot;,&quot;adserverId&quot;:&quot;4&quot;,&quot;id&quot;:&quot;3813&quot;,&quot;providerTypeId&quot;:&quot;1&quot;},&quot;buyDetail&quot;:{&quot;activeEndDate&quot;:&quot;2017-12-31&quot;,&quot;activeStartDate&quot;:&quot;2017-01-01&quot;,&quot;buyType&quot;:&quot;Display&quot;,&quot;id&quot;:&quot;${buyDetail}&quot;,&quot;client&quot;:{&quot;dualCostEnabled&quot;:false,&quot;billingCurrency&quot;:&quot;&quot;,&quot;budgetCurrency&quot;:&quot;USD&quot;,&quot;businessKey&quot;:&quot;USSJI002&quot;,&quot;clientCode&quot;:&quot;002&quot;,&quot;clientName&quot;:&quot;AUTO-CLIENT-2&quot;,&quot;id&quot;:&quot;54236687&quot;},&quot;estimate&quot;:{&quot;businessKey&quot;:&quot;USSJI002001007&quot;,&quot;estimateCode&quot;:&quot;007&quot;,&quot;estimateEndDate&quot;:&quot;2017-12-31&quot;,&quot;estimateName&quot;:&quot;EST1-JAN1-DEC31-2017 - TEST&quot;,&quot;estimateStartDate&quot;:&quot;2017-01-01&quot;,&quot;id&quot;:&quot;4674670594&quot;},&quot;agencyMedia&quot;:{&quot;mediaCode&quot;:&quot;I&quot;,&quot;mediaName&quot;:&quot;Interactive&quot;,&quot;agencyId&quot;:&quot;1&quot;,&quot;id&quot;:&quot;1&quot;},&quot;product&quot;:{&quot;businessKey&quot;:&quot;USSJI002001&quot;,&quot;productCode&quot;:&quot;001&quot;,&quot;productName&quot;:&quot;AUTO-PD-1&quot;,&quot;id&quot;:&quot;1861440446&quot;}},&quot;supplier&quot;:{&quot;businessKey&quot;:&quot;USSJI09000023&quot;,&quot;mediaCode&quot;:&quot;I&quot;,&quot;supplierCode&quot;:&quot;09000023&quot;,&quot;supplierName&quot;:&quot;GOOGLE.COM&quot;,&quot;zone&quot;:&quot;&quot;,&quot;supplierDiscounts&quot;:[],&quot;id&quot;:&quot;452&quot;}},&quot;actionType&quot;:&quot;validate&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/campaign-service/secure/campaign/${cmpid}/moving/packageBuyDetailList</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${protocol}://${server}/idesk/mediaplan/?osPspId=prsm-cm-plpb&amp;osCmpId=40007&amp;osEndpointUrl=${protocol}%3A%2F%2F${__P(env_name)}-prisma-ny.mediaocean.com&amp;osViewportVersion=1.28.4&amp;osResourceUrl=${protocol}%3A%2F%2Fpub-resource-viewport-prsm${__P(env_name)}.mediaocean.com%2F&amp;osLang=22&amp;osVref=${protocol}%3A%2F%2F${__P(env_name)}-prisma-ny.mediaocean.com%2Fviewport-home%2F&amp;os-pid=prsm-cm-plpb&amp;os-cid=40007&amp;campaign-id=${pubid}</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">${__P(includecontroller.prefix)}/TestFragments/TestData/${__P(env_name)}/${key}/Flighting.csv</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/campaign-service/secure/campaign/${cmpid}/moving/moveintonewpackage" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;selection&quot;:{&quot;all&quot;:true, &quot;nodes&quot;:[], &quot;filter&quot;:{&quot;op&quot;:&quot;and&quot;, &quot;filters&quot;:[{&quot;op&quot;:&quot;and&quot;, &quot;fields&quot;:[{&quot;op&quot;:&quot;eq&quot;, &quot;id&quot;:&quot;onMediaPlan&quot;, &quot;value&quot;:&quot;true&quot;}], &quot;alwaysApplied&quot;:true}]}, &quot;group&quot;:[{&quot;id&quot;:&quot;buyDetail&quot;, &quot;dir&quot;:&quot;asc&quot;},{&quot;id&quot;:&quot;supplierSite&quot;, &quot;dir&quot;:&quot;asc&quot;}], &quot;entity&quot;:&quot;Placement&quot;},&quot;package&quot;:{&quot;isIOsentForSearchOrder&quot;:false,&quot;isPostImpressionConversionsTagIncluded&quot;:false,&quot;publisherPaid&quot;:false,&quot;canChangeAdserver&quot;:true,&quot;commissionable&quot;:true,&quot;isDuplicate&quot;:false,&quot;onMediaPlan&quot;:false,&quot;primaryPlacement&quot;:false,&quot;richMediaAccepted&quot;:false,&quot;richMediaFeeIncluded&quot;:false,&quot;thirdPartyAdserver&quot;:true,&quot;thirdPartyAdserverInstanceId&quot;:&quot;3813&quot;,&quot;activeFlightEnd&quot;:&quot;2017-12-31&quot;,&quot;activeFlightStart&quot;:&quot;2017-01-01&quot;,&quot;buyCategory&quot;:&quot;Standard&quot;,&quot;capCost&quot;:&quot;Monthly&quot;,&quot;costMethod&quot;:&quot;CPM&quot;,&quot;currencyCode&quot;:&quot;N/A&quot;,&quot;distribution&quot;:&quot;Even&quot;,&quot;flightEnd&quot;:&quot;2017-12-31&quot;,&quot;flightStart&quot;:&quot;2017-01-01&quot;,&quot;packageType&quot;:&quot;Package&quot;,&quot;placementName&quot;:&quot;&quot;,&quot;placementType&quot;:&quot;Display&quot;,&quot;section&quot;:&quot;&quot;,&quot;site&quot;:&quot;GOOGLE.COM&quot;,&quot;supplierCode&quot;:&quot;USSJI09000023&quot;,&quot;supplierSite&quot;:&quot;GOOGLE.COM&quot;,&quot;target&quot;:&quot;&quot;,&quot;unitType&quot;:&quot;Impressions&quot;,&quot;placementActionTags&quot;:[],&quot;placementBuyDetails&quot;:[{&quot;campaignBuyDetailId&quot;:&quot;${buyDetail}&quot;,&quot;buyDetail&quot;:{&quot;activeEndDate&quot;:&quot;2017-12-31&quot;,&quot;activeStartDate&quot;:&quot;2017-01-01&quot;,&quot;buyType&quot;:&quot;Display&quot;,&quot;id&quot;:&quot;${buyDetail}&quot;,&quot;client&quot;:{&quot;dualCostEnabled&quot;:false,&quot;billingCurrency&quot;:&quot;&quot;,&quot;budgetCurrency&quot;:&quot;USD&quot;,&quot;businessKey&quot;:&quot;USSJI002&quot;,&quot;clientCode&quot;:&quot;002&quot;,&quot;clientName&quot;:&quot;AUTO-CLIENT-2&quot;,&quot;id&quot;:&quot;54236687&quot;},&quot;estimate&quot;:{&quot;businessKey&quot;:&quot;USSJI002001007&quot;,&quot;estimateCode&quot;:&quot;007&quot;,&quot;estimateEndDate&quot;:&quot;2017-12-31&quot;,&quot;estimateName&quot;:&quot;EST1-JAN1-DEC31-2017 - TEST&quot;,&quot;estimateStartDate&quot;:&quot;2017-01-01&quot;,&quot;id&quot;:&quot;4674670594&quot;},&quot;agencyMedia&quot;:{&quot;mediaCode&quot;:&quot;I&quot;,&quot;mediaName&quot;:&quot;Interactive&quot;,&quot;agencyId&quot;:&quot;1&quot;,&quot;id&quot;:&quot;1&quot;},&quot;product&quot;:{&quot;businessKey&quot;:&quot;USSJI002001&quot;,&quot;productCode&quot;:&quot;001&quot;,&quot;productName&quot;:&quot;AUTO-PD-1&quot;,&quot;id&quot;:&quot;1861440446&quot;}}}],&quot;customColumns&quot;:[],&quot;billableFlighting&quot;:[],&quot;flighting&quot;:[],&quot;adserverInstance&quot;:{&quot;canSelectConversionTags&quot;:true,&quot;canSelectSSL&quot;:true,&quot;capCostRequired&quot;:true,&quot;campaignNameLength&quot;:255,&quot;adserverDisplayName&quot;:&quot;DCM for SJ&quot;,&quot;adserverType&quot;:&quot;DCM&quot;,&quot;name&quot;:&quot;DCM for SJ&quot;,&quot;adserverId&quot;:&quot;4&quot;,&quot;id&quot;:&quot;3813&quot;,&quot;providerTypeId&quot;:&quot;1&quot;},&quot;buyDetail&quot;:{&quot;activeEndDate&quot;:&quot;2017-12-31&quot;,&quot;activeStartDate&quot;:&quot;2017-01-01&quot;,&quot;buyType&quot;:&quot;Display&quot;,&quot;id&quot;:&quot;${buyDetail}&quot;,&quot;client&quot;:{&quot;dualCostEnabled&quot;:false,&quot;billingCurrency&quot;:&quot;&quot;,&quot;budgetCurrency&quot;:&quot;USD&quot;,&quot;businessKey&quot;:&quot;USSJI002&quot;,&quot;clientCode&quot;:&quot;002&quot;,&quot;clientName&quot;:&quot;AUTO-CLIENT-2&quot;,&quot;id&quot;:&quot;54236687&quot;},&quot;estimate&quot;:{&quot;businessKey&quot;:&quot;USSJI002001007&quot;,&quot;estimateCode&quot;:&quot;007&quot;,&quot;estimateEndDate&quot;:&quot;2017-12-31&quot;,&quot;estimateName&quot;:&quot;EST1-JAN1-DEC31-2017 - TEST&quot;,&quot;estimateStartDate&quot;:&quot;2017-01-01&quot;,&quot;id&quot;:&quot;4674670594&quot;},&quot;agencyMedia&quot;:{&quot;mediaCode&quot;:&quot;I&quot;,&quot;mediaName&quot;:&quot;Interactive&quot;,&quot;agencyId&quot;:&quot;1&quot;,&quot;id&quot;:&quot;1&quot;},&quot;product&quot;:{&quot;businessKey&quot;:&quot;USSJI002001&quot;,&quot;productCode&quot;:&quot;001&quot;,&quot;productName&quot;:&quot;AUTO-PD-1&quot;,&quot;id&quot;:&quot;1861440446&quot;}},&quot;supplier&quot;:{&quot;businessKey&quot;:&quot;USSJI09000023&quot;,&quot;mediaCode&quot;:&quot;I&quot;,&quot;supplierCode&quot;:&quot;09000023&quot;,&quot;supplierName&quot;:&quot;GOOGLE.COM&quot;,&quot;zone&quot;:&quot;&quot;,&quot;supplierDiscounts&quot;:[],&quot;id&quot;:&quot;452&quot;}},&quot;actionType&quot;:&quot;validate&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/campaign-service/secure/campaign/${cmpid}/moving/moveintonewpackage</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${protocol}://${server}/idesk/mediaplan/?osPspId=prsm-cm-plpb&amp;osCmpId=40007&amp;osEndpointUrl=${protocol}%3A%2F%2F${__P(env_name)}-prisma-ny.mediaocean.com&amp;osViewportVersion=1.28.4&amp;osResourceUrl=${protocol}%3A%2F%2Fpub-resource-viewport-prsm${__P(env_name)}.mediaocean.com%2F&amp;osLang=22&amp;osVref=${protocol}%3A%2F%2F${__P(env_name)}-prisma-ny.mediaocean.com%2Fviewport-home%2F&amp;os-pid=prsm-cm-plpb&amp;os-cid=40007&amp;campaign-id=${pubid}</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">${__P(includecontroller.prefix)}/TestFragments/TestData/${__P(env_name)}/${key}/Flighting.csv</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/campaign-service/secure/campaign/${cmpid}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/campaign-service/secure/campaign/${cmpid}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${protocol}://${server}/idesk/mediaplan/?osPspId=prsm-cm-plpb&amp;osCmpId=40007&amp;osEndpointUrl=${protocol}%3A%2F%2F${server}&amp;osViewportVersion=1.28.4&amp;osResourceUrl=${protocol}%3A%2F%2Fpub-resource-viewport-prsm${env}.mediaocean.com%2F&amp;osLang=22&amp;osVref=${protocol}%3A%2F%2F${server}%2Fviewport-home%2F&amp;os-pid=prsm-cm-plpb&amp;os-cid=40007&amp;campaign-id=${pubid}</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/prisma-api/secure/rest/marketplace/offers" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="campaign-id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">campaign-id</stringProp>
                <stringProp name="Argument.value">${pubid}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="by" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">by</stringProp>
                <stringProp name="Argument.value">placements</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="sourceApp" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">sourceApp</stringProp>
                <stringProp name="Argument.value">idesk3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="sourceEnv" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">sourceEnv</stringProp>
                <stringProp name="Argument.value">PRSM${__uppercase(${__P(env_name)})}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/prisma-api/secure/rest/marketplace/offers</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${protocol}://${server}/prebuy-drawer/?iDeskAppName=idesk3&amp;iDeskAppEnv=QA3&amp;osPspId=prsm-cm-plpb&amp;osCmpId=40017&amp;osEndpointUrl=${protocol}%3A%2F%2F${server}&amp;osViewportVersion=1.28.4&amp;osResourceUrl=${protocol}%3A%2F%2Fpub-resource-viewport-prsm${env}.mediaocean.com%2F&amp;osLang=22&amp;osVref=${protocol}%3A%2F%2F${server}%2Fviewport-home%2F&amp;os-pid=prsm-cm-plpb&amp;os-cid=40017&amp;campaign-id=${pubid}</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/campaign-service/secure/campaign/publicforui/${pubid}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/campaign-service/secure/campaign/publicforui/${pubid}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${protocol}://${server}/idesk/prisma-campaign-header/?osPspId=prsm-cm-plpb&amp;osCmpId=40012&amp;osEndpointUrl=${protocol}%3A%2F%2F${server}&amp;osViewportVersion=1.28.4&amp;osResourceUrl=${protocol}%3A%2F%2Fpub-resource-viewport-prsm${env}.mediaocean.com%2F&amp;osLang=22&amp;osVref=${protocol}%3A%2F%2F${server}%2Fviewport-home%2F&amp;os-pid=prsm-cm-plpb&amp;os-cid=40012&amp;campaign-id=${pubid}</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AdserverType RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">adserverType</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;adserverType&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">AdserverType Is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Provider Instance Name RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">providerInstname</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;providerInstance&quot;:{&quot;id&quot;:(\d+),&quot;name&quot;:&quot;(\w+)&quot;,&quot;adserverType&quot;:&quot;(\w+)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$2$</stringProp>
            <stringProp name="RegexExtractor.default">ProviderInstanceName Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="providerInstanceId RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">providerInstanceId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;providerInstance&quot;:{&quot;id&quot;:(\d+),&quot;name&quot;:&quot;(\w+)&quot;,&quot;adserverType&quot;:&quot;(\w+)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Instance Id is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="BudgetCurrency RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">budgetCurrency</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;budgetCurrency&quot;:&quot;(\w+)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Budget Currency Is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="DistributionType RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">distType</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;distributionType&quot;:&quot;(\w+)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">DistributionType Is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="FlightStart  RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">CmpflightStart</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;campaignFlightStart&quot;:&quot;(\d+[-]\d+[-]\d+)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Campaign Flight Start Date Is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Flight End Date RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">flightEndDate</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;campaignFlightEnd&quot;:&quot;(\d+[-]\d+[-]\d+)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Campaign Flight End Date is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/campaign-service/secure/campaign/${cmpid}/placement/costCalculation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;placementPackage&quot;:${plcmtPkg},&quot;campaignId&quot;:&quot;${cmpid}&quot;,&quot;placementId&quot;:&quot;${plcmntId}&quot;,&quot;costMethod&quot;:&quot;${costMethod}&quot;,&quot;currencyType&quot;:&quot;${budgetCurrency}&quot;,&quot;fieldToCalc&quot;:&quot;${fieldToCalc}&quot;,&quot;plannedCost&quot;:&quot;${plannedCost}&quot;,&quot;rate&quot;:&quot;1000&quot;,&quot;unitType&quot;:&quot;${unitType}&quot;,&quot;units&quot;:&quot;1000&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/campaign-service/secure/campaign/${cmpid}/placement/costCalculation</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${protocol}://${server}/idesk/mediaplan/?osPspId=prsm-cm-plpb&amp;osCmpId=40007&amp;osEndpointUrl=${protocol}%3A%2F%2F${server}&amp;osViewportVersion=1.28.4&amp;osResourceUrl=${protocol}%3A%2F%2Fpub-resource-viewport-prsm${__P(env_name)}.mediaocean.com%2F&amp;osLang=22&amp;osVref=${protocol}%3A%2F%2F${sever}%2Fviewport-home%2F&amp;os-pid=prsm-cm-plpb&amp;os-cid=40007&amp;campaign-id=${pubid}</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">${__P(includecontroller.prefix)}/TestFragments/TestData/${__P(env_name)}/${key}/CostCalculation.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CostMethod RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">costMethod</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;costMethod&quot;:&quot;(\w+)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">CostMethod Is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/campaign-service/secure/campaign/${cmpid}/placement/flighting" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;distribution&quot;:&quot;${distType}&quot;,&quot;flightEnd&quot;:&quot;${flightEndDate}&quot;,&quot;flightStart&quot;:&quot;${CmpflightStart}&quot;,&quot;flighting&quot;:[{&quot;locked&quot;:${locked},&quot;placementId&quot;:&quot;${placmntId}&quot;,&quot;costAdjustment&quot;:&quot;${costAdjust}&quot;,&quot;currencyType&quot;:&quot;${budgetCurrency}&quot;,&quot;endDate&quot;:&quot;${ed1}&quot;,&quot;key&quot;:&quot;${key1}&quot;,&quot;name&quot;:&quot;${name1}&quot;,&quot;payableRate&quot;:&quot;${payableRate}&quot;,&quot;plannedCost&quot;:&quot;${plannedCost1}&quot;,&quot;plannedCostAdjusted&quot;:&quot;${plannedCostAdj1}&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;${pcand1}&quot;,&quot;plannedCostNoDecimals&quot;:&quot;${pcnod1}&quot;,&quot;plannedPercentage&quot;:&quot;${pp1}&quot;,&quot;startDate&quot;:&quot;${st1}&quot;,&quot;unitAmount&quot;:&quot;${uam1}&quot;},{&quot;locked&quot;:${locked},&quot;placementId&quot;:&quot;${placmntId}&quot;,&quot;costAdjustment&quot;:&quot;${costAdjust}&quot;,&quot;currencyType&quot;:&quot;${budgetCurrency}&quot;,&quot;endDate&quot;:&quot;${ed2}&quot;,&quot;key&quot;:&quot;${key2}&quot;,&quot;name&quot;:&quot;${name2}&quot;,&quot;payableRate&quot;:&quot;${payableRate}&quot;,&quot;plannedCost&quot;:&quot;${plannedCost}&quot;,&quot;plannedCostAdjusted&quot;:&quot;${plannedCostAdj}&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;${pcand}&quot;,&quot;plannedCostNoDecimals&quot;:&quot;${pcnod}&quot;,&quot;plannedPercentage&quot;:&quot;${pp}&quot;,&quot;startDate&quot;:&quot;${st2}&quot;,&quot;unitAmount&quot;:&quot;${uam}&quot;},{&quot;placementId&quot;:&quot;${placmntId}&quot;,&quot;costAdjustment&quot;:&quot;${costAdjust}&quot;,&quot;currencyType&quot;:&quot;${budgetCurrency}&quot;,&quot;endDate&quot;:&quot;${ed3}&quot;,&quot;key&quot;:&quot;${key3}&quot;,&quot;name&quot;:&quot;${name3}&quot;,&quot;payableRate&quot;:&quot;${payableRate}&quot;,&quot;plannedCost&quot;:&quot;${plannedCost}&quot;,&quot;plannedCostAdjusted&quot;:&quot;${plannedCostAdj}&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;${pcand}&quot;,&quot;plannedCostNoDecimals&quot;:&quot;${pcnod}&quot;,&quot;plannedPercentage&quot;:&quot;${pp}&quot;,&quot;startDate&quot;:&quot;${st3}&quot;,&quot;unitAmount&quot;:&quot;${uam}&quot;},{&quot;placementId&quot;:&quot;${placmntId}&quot;,&quot;costAdjustment&quot;:&quot;${costAdjust}&quot;,&quot;currencyType&quot;:&quot;${budgetCurrency}&quot;,&quot;endDate&quot;:&quot;${ed4}&quot;,&quot;key&quot;:&quot;${key4}&quot;,&quot;name&quot;:&quot;${name4}&quot;,&quot;payableRate&quot;:&quot;${payableRate}&quot;,&quot;plannedCost&quot;:&quot;${plannedCost}&quot;,&quot;plannedCostAdjusted&quot;:&quot;${plannedCostAdj}&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;${pcand}&quot;,&quot;plannedCostNoDecimals&quot;:&quot;0&quot;,&quot;plannedPercentage&quot;:&quot;${pp}&quot;,&quot;startDate&quot;:&quot;${st4}&quot;,&quot;unitAmount&quot;:&quot;${uam}&quot;},{&quot;placementId&quot;:&quot;${placmntId}&quot;,&quot;costAdjustment&quot;:&quot;${costAdjust}&quot;,&quot;currencyType&quot;:&quot;${budgetCurrency}&quot;,&quot;endDate&quot;:&quot;${ed5}&quot;,&quot;key&quot;:&quot;${key5}&quot;,&quot;name&quot;:&quot;${name5}&quot;,&quot;payableRate&quot;:&quot;${payableRate}&quot;,&quot;plannedCost&quot;:&quot;${plannedCost}&quot;,&quot;plannedCostAdjusted&quot;:&quot;${plannedCostAdj}&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;${pcand}&quot;,&quot;plannedCostNoDecimals&quot;:&quot;${pcnod}&quot;,&quot;plannedPercentage&quot;:&quot;${pp}&quot;,&quot;startDate&quot;:&quot;${st5}&quot;,&quot;unitAmount&quot;:&quot;${uam}&quot;},{&quot;placementId&quot;:&quot;${placmntId}&quot;,&quot;costAdjustment&quot;:&quot;${costAdjust}&quot;,&quot;currencyType&quot;:&quot;${budgetCurrency}&quot;,&quot;endDate&quot;:&quot;${ed6}&quot;,&quot;key&quot;:&quot;${key6}&quot;,&quot;name&quot;:&quot;${name6}&quot;,&quot;payableRate&quot;:&quot;${payableRate}&quot;,&quot;plannedCost&quot;:&quot;${plannedCost}&quot;,&quot;plannedCostAdjusted&quot;:&quot;${plannedCostAdj}&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;${pcand}&quot;,&quot;plannedCostNoDecimals&quot;:&quot;${pcnod}&quot;,&quot;plannedPercentage&quot;:&quot;${pp}&quot;,&quot;startDate&quot;:&quot;${st6}&quot;,&quot;unitAmount&quot;:&quot;${uam}&quot;},{&quot;placementId&quot;:&quot;${placmntId}&quot;,&quot;costAdjustment&quot;:&quot;${costAdjust}&quot;,&quot;currencyType&quot;:&quot;${budgetCurrency}&quot;,&quot;endDate&quot;:&quot;${ed7}&quot;,&quot;key&quot;:&quot;${key7}&quot;,&quot;name&quot;:&quot;${name7}&quot;,&quot;payableRate&quot;:&quot;${payableRate}&quot;,&quot;plannedCost&quot;:&quot;${plannedCost}&quot;,&quot;plannedCostAdjusted&quot;:&quot;${plannedCostAdj}&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;${pcand}&quot;,&quot;plannedCostNoDecimals&quot;:&quot;${pcnod}&quot;,&quot;plannedPercentage&quot;:&quot;${pp}&quot;,&quot;startDate&quot;:&quot;${st7}&quot;,&quot;unitAmount&quot;:&quot;${uam}&quot;},{&quot;placementId&quot;:&quot;${placmntId}&quot;,&quot;costAdjustment&quot;:&quot;${costAdjust}&quot;,&quot;currencyType&quot;:&quot;${budgetCurrency}&quot;,&quot;endDate&quot;:&quot;${ed8}&quot;,&quot;key&quot;:&quot;${key8}&quot;,&quot;name&quot;:&quot;${name8}&quot;,&quot;payableRate&quot;:&quot;${payableRate}&quot;,&quot;plannedCost&quot;:&quot;${plannedCost}&quot;,&quot;plannedCostAdjusted&quot;:&quot;${plannedCostAdj}&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;${pcand}&quot;,&quot;plannedCostNoDecimals&quot;:&quot;${pcnod}&quot;,&quot;plannedPercentage&quot;:&quot;${pp}&quot;,&quot;startDate&quot;:&quot;${st8}&quot;,&quot;unitAmount&quot;:&quot;${uam}&quot;},{&quot;placementId&quot;:&quot;${placmntId}&quot;,&quot;costAdjustment&quot;:&quot;${costAdjust}&quot;,&quot;currencyType&quot;:&quot;${budgetCurrency}&quot;,&quot;endDate&quot;:&quot;${ed9}&quot;,&quot;key&quot;:&quot;${key9}&quot;,&quot;name&quot;:&quot;${name9}&quot;,&quot;payableRate&quot;:&quot;${payableRate}&quot;,&quot;plannedCost&quot;:&quot;${plannedCost}&quot;,&quot;plannedCostAdjusted&quot;:&quot;${plannedCostAdj}&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;${pcnod}&quot;,&quot;plannedCostNoDecimals&quot;:&quot;${pcnod}&quot;,&quot;plannedPercentage&quot;:&quot;${pp}&quot;,&quot;startDate&quot;:&quot;${st9}&quot;,&quot;unitAmount&quot;:&quot;${uam}&quot;},{&quot;placementId&quot;:&quot;${placmntId}&quot;,&quot;costAdjustment&quot;:&quot;${costAdjust}&quot;,&quot;currencyType&quot;:&quot;${budgetCurrency}&quot;,&quot;endDate&quot;:&quot;${ed10}&quot;,&quot;key&quot;:&quot;${key10}&quot;,&quot;name&quot;:&quot;${name10}&quot;,&quot;payableRate&quot;:&quot;${payableRate}&quot;,&quot;plannedCost&quot;:&quot;${plannedCost}&quot;,&quot;plannedCostAdjusted&quot;:&quot;${plannedCostAdj}&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;${pcand}&quot;,&quot;plannedCostNoDecimals&quot;:&quot;${pcnod}&quot;,&quot;plannedPercentage&quot;:&quot;${pp}&quot;,&quot;startDate&quot;:&quot;${st10}&quot;,&quot;unitAmount&quot;:&quot;${uam}&quot;},{&quot;placementId&quot;:&quot;${placmntId}&quot;,&quot;costAdjustment&quot;:&quot;${costAdjust}&quot;,&quot;currencyType&quot;:&quot;${budgetCurrency}&quot;,&quot;endDate&quot;:&quot;${ed11}&quot;,&quot;key&quot;:&quot;${key11}&quot;,&quot;name&quot;:&quot;${name11}&quot;,&quot;payableRate&quot;:&quot;${payableRate}&quot;,&quot;plannedCost&quot;:&quot;${plannedCost}&quot;,&quot;plannedCostAdjusted&quot;:&quot;${plannedCostAdj}&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;${pcand}&quot;,&quot;plannedCostNoDecimals&quot;:&quot;${pcnod}&quot;,&quot;plannedPercentage&quot;:&quot;${pp}&quot;,&quot;startDate&quot;:&quot;${st11}&quot;,&quot;unitAmount&quot;:&quot;${uam}&quot;},{&quot;placementId&quot;:&quot;${placmntId}&quot;,&quot;costAdjustment&quot;:&quot;${costAdjust}&quot;,&quot;currencyType&quot;:&quot;${budgetCurrency}&quot;,&quot;endDate&quot;:&quot;${ed12}&quot;,&quot;key&quot;:&quot;${key12}&quot;,&quot;name&quot;:&quot;${name12}&quot;,&quot;payableRate&quot;:&quot;${payableRate}&quot;,&quot;plannedCost&quot;:&quot;${plannedCost}&quot;,&quot;plannedCostAdjusted&quot;:&quot;${plannedCostAdj}&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;${pcand}&quot;,&quot;plannedCostNoDecimals&quot;:&quot;${pcnod}&quot;,&quot;plannedPercentage&quot;:&quot;${pp}&quot;,&quot;startDate&quot;:&quot;${st12}&quot;,&quot;unitAmount&quot;:&quot;${uam}&quot;}],&quot;placementCost&quot;:{&quot;placementPackage&quot;:${plcmentPackage},&quot;campaignId&quot;:&quot;${cmpid}&quot;,&quot;placementId&quot;:&quot;${placmntId}&quot;,&quot;costMethod&quot;:&quot;${CPM}&quot;,&quot;currencyType&quot;:&quot;${budgetCurrency}&quot;,&quot;fieldToCalc&quot;:&quot;plannedCost&quot;,&quot;plannedCost&quot;:&quot;${pcm}&quot;,&quot;rate&quot;:&quot;${rate}&quot;,&quot;unitType&quot;:&quot;${unitType}&quot;,&quot;units&quot;:&quot;${units}&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/campaign-service/secure/campaign/${cmpid}/placement/flighting</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${protocol}://${server}/idesk/mediaplan/?osPspId=prsm-cm-plpb&amp;osCmpId=40007&amp;osEndpointUrl=${protocol}%3A%2F%2F${server}&amp;osViewportVersion=1.28.4&amp;osResourceUrl=${protocol}%3A%2F%2Fpub-resource-viewport-prsm${env}.mediaocean.com%2F&amp;osLang=22&amp;osVref=${protocol}%3A%2F%2F${server}%2Fviewport-home%2F&amp;os-pid=prsm-cm-plpb&amp;os-cid=40007&amp;campaign-id=${pubid}</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">${__P(includecontroller.prefix)}/TestFragments/TestData/${__P(env_name)}/${key}/Flight.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/campaign-service/secure/campaign/${cmpid}/placement/flighting" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;distribution&quot;:&quot;Even&quot;,&quot;flightEnd&quot;:&quot;2017-12-31&quot;,&quot;flightStart&quot;:&quot;2017-01-01&quot;,&quot;flighting&quot;:[{&quot;locked&quot;:true,&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-01-31&quot;,&quot;key&quot;:&quot;2017-01&quot;,&quot;name&quot;:&quot;Jan17&quot;,&quot;payableRate&quot;:&quot;0.0000&quot;,&quot;plannedCost&quot;:&quot;0.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;0.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;0&quot;,&quot;plannedCostNoDecimals&quot;:&quot;0&quot;,&quot;plannedPercentage&quot;:&quot;0.000000&quot;,&quot;startDate&quot;:&quot;2017-01-01&quot;,&quot;unitAmount&quot;:&quot;0&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-02-28&quot;,&quot;key&quot;:&quot;2017-02&quot;,&quot;name&quot;:&quot;Feb17&quot;,&quot;payableRate&quot;:&quot;0.0000&quot;,&quot;plannedCost&quot;:&quot;0.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;0.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;0&quot;,&quot;plannedCostNoDecimals&quot;:&quot;0&quot;,&quot;plannedPercentage&quot;:&quot;0.000000&quot;,&quot;startDate&quot;:&quot;2017-02-01&quot;,&quot;unitAmount&quot;:&quot;0&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-03-31&quot;,&quot;key&quot;:&quot;2017-03&quot;,&quot;name&quot;:&quot;Mar17&quot;,&quot;payableRate&quot;:&quot;0.0000&quot;,&quot;plannedCost&quot;:&quot;0.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;0.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;0&quot;,&quot;plannedCostNoDecimals&quot;:&quot;0&quot;,&quot;plannedPercentage&quot;:&quot;0.000000&quot;,&quot;startDate&quot;:&quot;2017-03-01&quot;,&quot;unitAmount&quot;:&quot;0&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-04-30&quot;,&quot;key&quot;:&quot;2017-04&quot;,&quot;name&quot;:&quot;Apr17&quot;,&quot;payableRate&quot;:&quot;0.0000&quot;,&quot;plannedCost&quot;:&quot;0.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;0.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;0&quot;,&quot;plannedCostNoDecimals&quot;:&quot;0&quot;,&quot;plannedPercentage&quot;:&quot;0.000000&quot;,&quot;startDate&quot;:&quot;2017-04-01&quot;,&quot;unitAmount&quot;:&quot;0&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-05-31&quot;,&quot;key&quot;:&quot;2017-05&quot;,&quot;name&quot;:&quot;May17&quot;,&quot;payableRate&quot;:&quot;0.0000&quot;,&quot;plannedCost&quot;:&quot;0.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;0.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;0&quot;,&quot;plannedCostNoDecimals&quot;:&quot;0&quot;,&quot;plannedPercentage&quot;:&quot;0.000000&quot;,&quot;startDate&quot;:&quot;2017-05-01&quot;,&quot;unitAmount&quot;:&quot;0&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-06-30&quot;,&quot;key&quot;:&quot;2017-06&quot;,&quot;name&quot;:&quot;Jun17&quot;,&quot;payableRate&quot;:&quot;0.0000&quot;,&quot;plannedCost&quot;:&quot;0.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;0.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;0&quot;,&quot;plannedCostNoDecimals&quot;:&quot;0&quot;,&quot;plannedPercentage&quot;:&quot;0.000000&quot;,&quot;startDate&quot;:&quot;2017-06-01&quot;,&quot;unitAmount&quot;:&quot;0&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-07-31&quot;,&quot;key&quot;:&quot;2017-07&quot;,&quot;name&quot;:&quot;Jul17&quot;,&quot;payableRate&quot;:&quot;0.0000&quot;,&quot;plannedCost&quot;:&quot;0.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;0.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;0&quot;,&quot;plannedCostNoDecimals&quot;:&quot;0&quot;,&quot;plannedPercentage&quot;:&quot;0.000000&quot;,&quot;startDate&quot;:&quot;2017-07-01&quot;,&quot;unitAmount&quot;:&quot;0&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-08-31&quot;,&quot;key&quot;:&quot;2017-08&quot;,&quot;name&quot;:&quot;Aug17&quot;,&quot;payableRate&quot;:&quot;0.0000&quot;,&quot;plannedCost&quot;:&quot;0.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;0.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;0&quot;,&quot;plannedCostNoDecimals&quot;:&quot;0&quot;,&quot;plannedPercentage&quot;:&quot;0.000000&quot;,&quot;startDate&quot;:&quot;2017-08-01&quot;,&quot;unitAmount&quot;:&quot;0&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-09-30&quot;,&quot;key&quot;:&quot;2017-09&quot;,&quot;name&quot;:&quot;Sep17&quot;,&quot;payableRate&quot;:&quot;0.0000&quot;,&quot;plannedCost&quot;:&quot;0.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;0.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;0&quot;,&quot;plannedCostNoDecimals&quot;:&quot;0&quot;,&quot;plannedPercentage&quot;:&quot;0.000000&quot;,&quot;startDate&quot;:&quot;2017-09-01&quot;,&quot;unitAmount&quot;:&quot;0&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-10-31&quot;,&quot;key&quot;:&quot;2017-10&quot;,&quot;name&quot;:&quot;Oct17&quot;,&quot;payableRate&quot;:&quot;0.0000&quot;,&quot;plannedCost&quot;:&quot;0.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;0.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;0&quot;,&quot;plannedCostNoDecimals&quot;:&quot;0&quot;,&quot;plannedPercentage&quot;:&quot;0.000000&quot;,&quot;startDate&quot;:&quot;2017-10-01&quot;,&quot;unitAmount&quot;:&quot;0&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-11-30&quot;&quot;key&quot;:&quot;2017-11&quot;,&quot;name&quot;:&quot;Nov17&quot;,&quot;payableRate&quot;:&quot;0.0000&quot;,&quot;plannedCost&quot;:&quot;0.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;0.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;0&quot;,&quot;plannedCostNoDecimals&quot;:&quot;0&quot;,&quot;plannedPercentage&quot;:&quot;0.000000&quot;,&quot;startDate&quot;:&quot;2017-11-01&quot;,&quot;unitAmount&quot;:&quot;0&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-12-31&quot;,&quot;key&quot;:&quot;2017-12&quot;,&quot;name&quot;:&quot;Dec17&quot;,&quot;payableRate&quot;:&quot;0.0000&quot;,&quot;plannedCost&quot;:&quot;0.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;0.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;0&quot;,&quot;plannedCostNoDecimals&quot;:&quot;0&quot;,&quot;plannedPercentage&quot;:&quot;0.000000&quot;,&quot;startDate&quot;:&quot;2017-12-01&quot;,&quot;unitAmount&quot;:&quot;0&quot;}],&quot;placementCost&quot;:{&quot;placementPackage&quot;:true,&quot;campaignId&quot;:&quot;${cmpid}&quot;,&quot;placementId&quot;:&quot;-1&quot;,&quot;costMethod&quot;:&quot;CPM&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;fieldToCalc&quot;:&quot;plannedCost&quot;,&quot;plannedCost&quot;:&quot;1000.00&quot;,&quot;rate&quot;:&quot;1000.0000&quot;,&quot;unitType&quot;:&quot;Impressions&quot;,&quot;units&quot;:&quot;1000&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/campaign-service/secure/campaign/${cmpid}/placement/flighting</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${protocol}://${server}/idesk/mediaplan/?osPspId=prsm-cm-plpb&amp;osCmpId=40007&amp;osEndpointUrl=${protocol}%3A%2F%2F${server}&amp;osViewportVersion=1.28.4&amp;osResourceUrl=${protocol}%3A%2F%2Fpub-resource-viewport-prsm${env}.mediaocean.com%2F&amp;osLang=22&amp;osVref=${protocol}%3A%2F%2F${server}%2Fviewport-home%2F&amp;os-pid=prsm-cm-plpb&amp;os-cid=40007&amp;campaign-id=${pubid}</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">${__P(includecontroller.prefix)}/TestFragments/TestData/${__P(env_name)}/${key}/Flight.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/campaign-service/secure/campaign/publicforui/${pubid}" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/campaign-service/secure/campaign/publicforui/${pubid}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${protocol}://${server}/idesk/prisma-campaign-header/?osPspId=prsm-cm-plpb&amp;osCmpId=40012&amp;osEndpointUrl=${protocol}%3A%2F%2F${server}&amp;osViewportVersion=1.28.4&amp;osResourceUrl=${protocol}%3A%2F%2Fpub-resource-viewport-prsm${__P(env_name)}.mediaocean.com%2F&amp;osLang=22&amp;osVref=${protocol}%3A%2F%2F${server}%2Fviewport-home%2F&amp;os-pid=prsm-cm-plpb&amp;os-cid=40012&amp;campaign-id=${pubid}</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ProductName RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">productName</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;productName&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Product Name is not found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="EstimateName RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">estimateName</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;estimateName&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Estimate Name is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ProductCode RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">ProductCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;productCode&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">ProductCode is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AgencyId RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">agencyId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;agencyId&quot;:(\d+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Agency Id Is not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AgencyMediaId RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">agencyMediaId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;agencyMediaId&quot;:(\d+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Agency Media Id Is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="clientName RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">clientName</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;clientName&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">ClientName is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AdserverId RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">adserverId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;adserverId&quot;:(\d+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Adserver Id Is not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="DistributionType RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">distributionType</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;distributionType&quot;:&quot;(\w+)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">DistributionType Is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MediaName RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">mediaName</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;mediaName&quot;:&quot;(\w+)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">MediaName Is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MediaType RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">mediaType</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;mediaType&quot;:&quot;(\w+)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">MediaType Is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Campaign Flight RegEx" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">campaignFlightEnd</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;campaignFlightEnd&quot;:&quot;(\d+[-]\d+[-]\d+)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Campaign Flight End Date Is Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/campaign-service/secure/campaign/${cmpid}/moving/moveintonewpackage" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;selection&quot;:{&quot;all&quot;:true, &quot;nodes&quot;:[], &quot;filter&quot;:{&quot;op&quot;:&quot;and&quot;, &quot;filters&quot;:[{&quot;op&quot;:&quot;and&quot;, &quot;fields&quot;:[{&quot;op&quot;:&quot;eq&quot;, &quot;id&quot;:&quot;onMediaPlan&quot;, &quot;value&quot;:&quot;true&quot;}], &quot;alwaysApplied&quot;:true}]}, &quot;group&quot;:[{&quot;id&quot;:&quot;buyDetail&quot;, &quot;dir&quot;:&quot;asc&quot;},{&quot;id&quot;:&quot;supplierSite&quot;, &quot;dir&quot;:&quot;asc&quot;}], &quot;entity&quot;:&quot;Placement&quot;},&quot;package&quot;:{&quot;isIOsentForSearchOrder&quot;:false,&quot;isPostImpressionConversionsTagIncluded&quot;:false,&quot;publisherPaid&quot;:false,&quot;canChangeAdserver&quot;:true,&quot;commissionable&quot;:true,&quot;isDuplicate&quot;:false,&quot;onMediaPlan&quot;:true,&quot;primaryPlacement&quot;:false,&quot;richMediaAccepted&quot;:false,&quot;richMediaFeeIncluded&quot;:false,&quot;thirdPartyAdserver&quot;:true,&quot;campaignId&quot;:&quot;${cmpid}&quot;,&quot;thirdPartyAdserverInstanceId&quot;:&quot;3813&quot;,&quot;activeFlightEnd&quot;:&quot;2017-12-31&quot;,&quot;activeFlightStart&quot;:&quot;2017-01-01&quot;,&quot;buyCategory&quot;:&quot;Standard&quot;,&quot;capCost&quot;:&quot;Monthly&quot;,&quot;costMethod&quot;:&quot;CPM&quot;,&quot;currencyCode&quot;:&quot;N/A&quot;,&quot;distribution&quot;:&quot;Even&quot;,&quot;flightEnd&quot;:&quot;2017-12-31&quot;,&quot;flightStart&quot;:&quot;2017-01-01&quot;,&quot;packageType&quot;:&quot;Package&quot;,&quot;placementName&quot;:&quot;perfpackage&quot;,&quot;placementType&quot;:&quot;Display&quot;,&quot;plannedCost&quot;:&quot;1000.00&quot;,&quot;rate&quot;:&quot;1000.0000&quot;,&quot;rateValue&quot;:&quot;1000.0000&quot;,&quot;section&quot;:&quot;&quot;,&quot;site&quot;:&quot;GOOGLE.COM&quot;,&quot;supplierCode&quot;:&quot;USSJI09000023&quot;,&quot;supplierSite&quot;:&quot;GOOGLE.COM&quot;,&quot;target&quot;:&quot;&quot;,&quot;unitAmount&quot;:&quot;1000&quot;,&quot;unitType&quot;:&quot;Impressions&quot;,&quot;providers&quot;:[],&quot;placementActionTags&quot;:[],&quot;placementBuyDetails&quot;:[{&quot;campaignBuyDetailId&quot;:&quot;${buyDetail}&quot;,&quot;buyDetail&quot;:{&quot;activeEndDate&quot;:&quot;2017-12-31&quot;,&quot;activeStartDate&quot;:&quot;2017-01-01&quot;,&quot;buyType&quot;:&quot;Display&quot;,&quot;id&quot;:&quot;${buyDetail}&quot;,&quot;client&quot;:{&quot;dualCostEnabled&quot;:false,&quot;billingCurrency&quot;:&quot;&quot;,&quot;budgetCurrency&quot;:&quot;USD&quot;,&quot;businessKey&quot;:&quot;USSJI002&quot;,&quot;clientCode&quot;:&quot;002&quot;,&quot;clientName&quot;:&quot;AUTO-CLIENT-2&quot;,&quot;id&quot;:&quot;54236687&quot;},&quot;estimate&quot;:{&quot;businessKey&quot;:&quot;USSJI002001007&quot;,&quot;estimateCode&quot;:&quot;007&quot;,&quot;estimateEndDate&quot;:&quot;2017-12-31&quot;,&quot;estimateName&quot;:&quot;EST1-JAN1-DEC31-2017 - TEST&quot;,&quot;estimateStartDate&quot;:&quot;2017-01-01&quot;,&quot;id&quot;:&quot;4674670594&quot;},&quot;agencyMedia&quot;:{&quot;mediaCode&quot;:&quot;I&quot;,&quot;mediaName&quot;:&quot;Interactive&quot;,&quot;agencyId&quot;:&quot;1&quot;,&quot;id&quot;:&quot;1&quot;},&quot;product&quot;:{&quot;businessKey&quot;:&quot;USSJI002001&quot;,&quot;productCode&quot;:&quot;001&quot;,&quot;productName&quot;:&quot;AUTO-PD-1&quot;,&quot;id&quot;:&quot;1861440446&quot;}}}],&quot;customColumns&quot;:[],&quot;billableFlighting&quot;:[],&quot;flighting&quot;:[{&quot;locked&quot;:true,&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-01-31&quot;,&quot;key&quot;:&quot;2017-01&quot;,&quot;name&quot;:&quot;Jan17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;0.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;0.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;0&quot;,&quot;plannedCostNoDecimals&quot;:&quot;0&quot;,&quot;plannedPercentage&quot;:&quot;0.000000&quot;,&quot;startDate&quot;:&quot;2017-01-01&quot;,&quot;unitAmount&quot;:&quot;0&quot;},{&quot;locked&quot;:true,&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-02-28&quot;,&quot;key&quot;:&quot;2017-02&quot;,&quot;name&quot;:&quot;Feb17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;0.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;0.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;0&quot;,&quot;plannedCostNoDecimals&quot;:&quot;0&quot;,&quot;plannedPercentage&quot;:&quot;0.000000&quot;,&quot;startDate&quot;:&quot;2017-02-01&quot;,&quot;unitAmount&quot;:&quot;0&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-03-31&quot;,&quot;key&quot;:&quot;2017-03&quot;,&quot;name&quot;:&quot;Mar17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;100.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;100.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;100&quot;,&quot;plannedCostNoDecimals&quot;:&quot;100&quot;,&quot;plannedPercentage&quot;:&quot;10.000000&quot;,&quot;startDate&quot;:&quot;2017-03-01&quot;,&quot;unitAmount&quot;:&quot;100&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-04-30&quot;,&quot;key&quot;:&quot;2017-04&quot;,&quot;name&quot;:&quot;Apr17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;100.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;100.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;100&quot;,&quot;plannedCostNoDecimals&quot;:&quot;100&quot;,&quot;plannedPercentage&quot;:&quot;10.000000&quot;,&quot;startDate&quot;:&quot;2017-04-01&quot;,&quot;unitAmount&quot;:&quot;100&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-05-31&quot;,&quot;key&quot;:&quot;2017-05&quot;,&quot;name&quot;:&quot;May17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;100.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;100.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;100&quot;,&quot;plannedCostNoDecimals&quot;:&quot;100&quot;,&quot;plannedPercentage&quot;:&quot;10.000000&quot;,&quot;startDate&quot;:&quot;2017-05-01&quot;,&quot;unitAmount&quot;:&quot;100&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-06-30&quot;,&quot;key&quot;:&quot;2017-06&quot;,&quot;name&quot;:&quot;Jun17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;100.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;100.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;100&quot;,&quot;plannedCostNoDecimals&quot;:&quot;100&quot;,&quot;plannedPercentage&quot;:&quot;10.000000&quot;,&quot;startDate&quot;:&quot;2017-06-01&quot;,&quot;unitAmount&quot;:&quot;100&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-07-31&quot;,&quot;key&quot;:&quot;2017-07&quot;,&quot;name&quot;:&quot;Jul17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;100.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;100.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;100&quot;,&quot;plannedCostNoDecimals&quot;:&quot;100&quot;,&quot;plannedPercentage&quot;:&quot;10.000000&quot;,&quot;startDate&quot;:&quot;2017-07-01&quot;,&quot;unitAmount&quot;:&quot;100&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-08-31&quot;,&quot;key&quot;:&quot;2017-08&quot;,&quot;name&quot;:&quot;Aug17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;100.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;100.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;100&quot;,&quot;plannedCostNoDecimals&quot;:&quot;100&quot;,&quot;plannedPercentage&quot;:&quot;10.000000&quot;,&quot;startDate&quot;:&quot;2017-08-01&quot;,&quot;unitAmount&quot;:&quot;100&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-09-30&quot;,&quot;key&quot;:&quot;2017-09&quot;,&quot;name&quot;:&quot;Sep17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;100.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;100.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;100&quot;,&quot;plannedCostNoDecimals&quot;:&quot;100&quot;,&quot;plannedPercentage&quot;:&quot;10.000000&quot;,&quot;startDate&quot;:&quot;2017-09-01&quot;,&quot;unitAmount&quot;:&quot;100&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-10-31&quot;,&quot;key&quot;:&quot;2017-10&quot;,&quot;name&quot;:&quot;Oct17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;100.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;100.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;100&quot;,&quot;plannedCostNoDecimals&quot;:&quot;100&quot;,&quot;plannedPercentage&quot;:&quot;10.000000&quot;,&quot;startDate&quot;:&quot;2017-10-01&quot;,&quot;unitAmount&quot;:&quot;100&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-11-30&quot;,&quot;key&quot;:&quot;2017-11&quot;,&quot;name&quot;:&quot;Nov17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;100.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;100.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;100&quot;,&quot;plannedCostNoDecimals&quot;:&quot;100&quot;,&quot;plannedPercentage&quot;:&quot;10.000000&quot;,&quot;startDate&quot;:&quot;2017-11-01&quot;,&quot;unitAmount&quot;:&quot;100&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-12-31&quot;,&quot;key&quot;:&quot;2017-12&quot;,&quot;name&quot;:&quot;Dec17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;100.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;100.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;100&quot;,&quot;plannedCostNoDecimals&quot;:&quot;100&quot;,&quot;plannedPercentage&quot;:&quot;10.000000&quot;,&quot;startDate&quot;:&quot;2017-12-01&quot;,&quot;unitAmount&quot;:&quot;100&quot;}],&quot;adserverInstance&quot;:{&quot;canSelectConversionTags&quot;:true,&quot;canSelectSSL&quot;:true,&quot;capCostRequired&quot;:true,&quot;campaignNameLength&quot;:255,&quot;adserverDisplayName&quot;:&quot;DCM for SJ&quot;,&quot;adserverType&quot;:&quot;DCM&quot;,&quot;name&quot;:&quot;DCM for SJ&quot;,&quot;adserverId&quot;:&quot;4&quot;,&quot;id&quot;:&quot;3813&quot;,&quot;providerTypeId&quot;:&quot;1&quot;},&quot;buyDetail&quot;:{&quot;activeEndDate&quot;:&quot;2017-12-31&quot;,&quot;activeStartDate&quot;:&quot;2017-01-01&quot;,&quot;buyType&quot;:&quot;Display&quot;,&quot;id&quot;:&quot;${buyDetail}&quot;,&quot;client&quot;:{&quot;dualCostEnabled&quot;:false,&quot;billingCurrency&quot;:&quot;&quot;,&quot;budgetCurrency&quot;:&quot;USD&quot;,&quot;businessKey&quot;:&quot;USSJI002&quot;,&quot;clientCode&quot;:&quot;002&quot;,&quot;clientName&quot;:&quot;AUTO-CLIENT-2&quot;,&quot;id&quot;:&quot;54236687&quot;},&quot;estimate&quot;:{&quot;businessKey&quot;:&quot;USSJI002001007&quot;,&quot;estimateCode&quot;:&quot;007&quot;,&quot;estimateEndDate&quot;:&quot;2017-12-31&quot;,&quot;estimateName&quot;:&quot;EST1-JAN1-DEC31-2017 - TEST&quot;,&quot;estimateStartDate&quot;:&quot;2017-01-01&quot;,&quot;id&quot;:&quot;4674670594&quot;},&quot;agencyMedia&quot;:{&quot;mediaCode&quot;:&quot;I&quot;,&quot;mediaName&quot;:&quot;Interactive&quot;,&quot;agencyId&quot;:&quot;1&quot;,&quot;id&quot;:&quot;1&quot;},&quot;product&quot;:{&quot;businessKey&quot;:&quot;USSJI002001&quot;,&quot;productCode&quot;:&quot;001&quot;,&quot;productName&quot;:&quot;AUTO-PD-1&quot;,&quot;id&quot;:&quot;1861440446&quot;}},&quot;supplier&quot;:{&quot;businessKey&quot;:&quot;USSJI09000023&quot;,&quot;mediaCode&quot;:&quot;I&quot;,&quot;supplierCode&quot;:&quot;09000023&quot;,&quot;supplierName&quot;:&quot;GOOGLE.COM&quot;,&quot;zone&quot;:&quot;&quot;,&quot;supplierDiscounts&quot;:[],&quot;id&quot;:&quot;452&quot;}},&quot;actionType&quot;:&quot;save&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/campaign-service/secure/campaign/${cmpid}/moving/moveintonewpackage</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${protocol}://${server}/idesk/mediaplan/?osPspId=prsm-cm-plpb&amp;osCmpId=40007&amp;osEndpointUrl=${protocol}%3A%2F%2F${server}&amp;osViewportVersion=1.28.4&amp;osResourceUrl=${protocol}%3A%2F%2Fpub-resource-viewport-prsm${env}.mediaocean.com%2F&amp;osLang=22&amp;osVref=${protocol}%3A%2F%2F${server}%2Fviewport-home%2F&amp;os-pid=prsm-cm-plpb&amp;os-cid=40007&amp;campaign-id=${pubid}</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">${__P(includecontroller.prefix)}/TestFragments/TestData/${__P(env_name)}/${key}/MoveIn.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/campaign-service/secure/campaign/${cmpid}/moving/moveintonewpackage" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;selection&quot;:{&quot;all&quot;:true, &quot;nodes&quot;:[], &quot;filter&quot;:{&quot;op&quot;:&quot;and&quot;, &quot;filters&quot;:[{&quot;op&quot;:&quot;and&quot;, &quot;fields&quot;:[{&quot;op&quot;:&quot;eq&quot;, &quot;id&quot;:&quot;onMediaPlan&quot;, &quot;value&quot;:&quot;true&quot;}], &quot;alwaysApplied&quot;:true}]}, &quot;group&quot;:[{&quot;id&quot;:&quot;buyDetail&quot;, &quot;dir&quot;:&quot;asc&quot;},{&quot;id&quot;:&quot;supplierSite&quot;, &quot;dir&quot;:&quot;asc&quot;}], &quot;entity&quot;:&quot;Placement&quot;},&quot;package&quot;:{&quot;isIOsentForSearchOrder&quot;:false,&quot;isPostImpressionConversionsTagIncluded&quot;:false,&quot;publisherPaid&quot;:false,&quot;canChangeAdserver&quot;:true,&quot;commissionable&quot;:true,&quot;isDuplicate&quot;:false,&quot;onMediaPlan&quot;:true,&quot;primaryPlacement&quot;:false,&quot;richMediaAccepted&quot;:false,&quot;richMediaFeeIncluded&quot;:false,&quot;thirdPartyAdserver&quot;:true,&quot;campaignId&quot;:&quot;${__eval(${cmpid})}&quot;,&quot;thirdPartyAdserverInstanceId&quot;:&quot;3813&quot;,&quot;activeFlightEnd&quot;:&quot;2017-12-31&quot;,&quot;activeFlightStart&quot;:&quot;2017-01-01&quot;,&quot;buyCategory&quot;:&quot;Standard&quot;,&quot;capCost&quot;:&quot;Monthly&quot;,&quot;costMethod&quot;:&quot;CPM&quot;,&quot;currencyCode&quot;:&quot;N/A&quot;,&quot;distribution&quot;:&quot;Even&quot;,&quot;flightEnd&quot;:&quot;2017-12-31&quot;,&quot;flightStart&quot;:&quot;2017-01-01&quot;,&quot;packageType&quot;:&quot;Package&quot;,&quot;placementName&quot;:&quot;Performance Pkg&quot;,&quot;placementType&quot;:&quot;Display&quot;,&quot;plannedCost&quot;:&quot;1000.00&quot;,&quot;rate&quot;:&quot;1000.0000&quot;,&quot;rateValue&quot;:&quot;1000.0000&quot;,&quot;section&quot;:&quot;&quot;,&quot;site&quot;:&quot;GOOGLE.COM&quot;,&quot;supplierCode&quot;:&quot;USSJI09000023&quot;,&quot;supplierSite&quot;:&quot;GOOGLE.COM&quot;,&quot;target&quot;:&quot;&quot;,&quot;unitAmount&quot;:&quot;1000&quot;,&quot;unitType&quot;:&quot;Impressions&quot;,&quot;providers&quot;:[],&quot;placementActionTags&quot;:[],&quot;placementBuyDetails&quot;:[{&quot;campaignBuyDetailId&quot;:&quot;${__eval(${buydetail})}&quot;,&quot;buyDetail&quot;:{&quot;activeEndDate&quot;:&quot;2017-12-31&quot;,&quot;activeStartDate&quot;:&quot;2017-01-01&quot;,&quot;buyType&quot;:&quot;Display&quot;,&quot;id&quot;:&quot;${__eval(${buydetail})}&quot;,&quot;client&quot;:{&quot;dualCostEnabled&quot;:false,&quot;billingCurrency&quot;:&quot;&quot;,&quot;budgetCurrency&quot;:&quot;USD&quot;,&quot;businessKey&quot;:&quot;USSJI002&quot;,&quot;clientCode&quot;:&quot;002&quot;,&quot;clientName&quot;:&quot;AUTO-CLIENT-2&quot;,&quot;id&quot;:&quot;54236687&quot;},&quot;estimate&quot;:{&quot;businessKey&quot;:&quot;USSJI002001007&quot;,&quot;estimateCode&quot;:&quot;007&quot;,&quot;estimateEndDate&quot;:&quot;2017-12-31&quot;,&quot;estimateName&quot;:&quot;EST1-JAN1-DEC31-2017 - TEST&quot;,&quot;estimateStartDate&quot;:&quot;2017-01-01&quot;,&quot;id&quot;:&quot;4674670594&quot;},&quot;agencyMedia&quot;:{&quot;mediaCode&quot;:&quot;I&quot;,&quot;mediaName&quot;:&quot;Interactive&quot;,&quot;agencyId&quot;:&quot;1&quot;,&quot;id&quot;:&quot;1&quot;},&quot;product&quot;:{&quot;businessKey&quot;:&quot;USSJI002001&quot;,&quot;productCode&quot;:&quot;001&quot;,&quot;productName&quot;:&quot;AUTO-PD-1&quot;,&quot;id&quot;:&quot;1861440446&quot;}}}],&quot;customColumns&quot;:[],&quot;billableFlighting&quot;:[],&quot;flighting&quot;:[{&quot;locked&quot;:true,&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-01-31&quot;,&quot;key&quot;:&quot;2017-01&quot;,&quot;name&quot;:&quot;Jan17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;0.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;0.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;0&quot;,&quot;plannedCostNoDecimals&quot;:&quot;0&quot;,&quot;plannedPercentage&quot;:&quot;0.000000&quot;,&quot;startDate&quot;:&quot;2017-01-01&quot;,&quot;unitAmount&quot;:&quot;0&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-02-28&quot;,&quot;key&quot;:&quot;2017-02&quot;,&quot;name&quot;:&quot;Feb17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;100.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;100.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;100&quot;,&quot;plannedCostNoDecimals&quot;:&quot;100&quot;,&quot;plannedPercentage&quot;:&quot;10.000000&quot;,&quot;startDate&quot;:&quot;2017-02-01&quot;,&quot;unitAmount&quot;:&quot;100&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-03-31&quot;,&quot;key&quot;:&quot;2017-03&quot;,&quot;name&quot;:&quot;Mar17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;90.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;90.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;90&quot;,&quot;plannedCostNoDecimals&quot;:&quot;90&quot;,&quot;plannedPercentage&quot;:&quot;9.000000&quot;,&quot;startDate&quot;:&quot;2017-03-01&quot;,&quot;unitAmount&quot;:&quot;90&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-04-30&quot;,&quot;key&quot;:&quot;2017-04&quot;,&quot;name&quot;:&quot;Apr17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;90.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;90.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;90&quot;,&quot;plannedCostNoDecimals&quot;:&quot;90&quot;,&quot;plannedPercentage&quot;:&quot;9.000000&quot;,&quot;startDate&quot;:&quot;2017-04-01&quot;,&quot;unitAmount&quot;:&quot;90&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-05-31&quot;,&quot;key&quot;:&quot;2017-05&quot;,&quot;name&quot;:&quot;May17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;90.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;90.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;90&quot;,&quot;plannedCostNoDecimals&quot;:&quot;90&quot;,&quot;plannedPercentage&quot;:&quot;9.000000&quot;,&quot;startDate&quot;:&quot;2017-05-01&quot;,&quot;unitAmount&quot;:&quot;90&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-06-30&quot;,&quot;key&quot;:&quot;2017-06&quot;,&quot;name&quot;:&quot;Jun17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;90.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;90.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;90&quot;,&quot;plannedCostNoDecimals&quot;:&quot;90&quot;,&quot;plannedPercentage&quot;:&quot;9.000000&quot;,&quot;startDate&quot;:&quot;2017-06-01&quot;,&quot;unitAmount&quot;:&quot;90&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-07-31&quot;,&quot;key&quot;:&quot;2017-07&quot;,&quot;name&quot;:&quot;Jul17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;90.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;90.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;90&quot;,&quot;plannedCostNoDecimals&quot;:&quot;90&quot;,&quot;plannedPercentage&quot;:&quot;9.000000&quot;,&quot;startDate&quot;:&quot;2017-07-01&quot;,&quot;unitAmount&quot;:&quot;90&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-08-31&quot;,&quot;key&quot;:&quot;2017-08&quot;,&quot;name&quot;:&quot;Aug17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;90.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;90.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;90&quot;,&quot;plannedCostNoDecimals&quot;:&quot;90&quot;,&quot;plannedPercentage&quot;:&quot;9.000000&quot;,&quot;startDate&quot;:&quot;2017-08-01&quot;,&quot;unitAmount&quot;:&quot;90&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-09-30&quot;,&quot;key&quot;:&quot;2017-09&quot;,&quot;name&quot;:&quot;Sep17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;90.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;90.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;90&quot;,&quot;plannedCostNoDecimals&quot;:&quot;90&quot;,&quot;plannedPercentage&quot;:&quot;9.000000&quot;,&quot;startDate&quot;:&quot;2017-09-01&quot;,&quot;unitAmount&quot;:&quot;90&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-10-31&quot;,&quot;key&quot;:&quot;2017-10&quot;,&quot;name&quot;:&quot;Oct17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;90.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;90.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;90&quot;,&quot;plannedCostNoDecimals&quot;:&quot;90&quot;,&quot;plannedPercentage&quot;:&quot;9.000000&quot;,&quot;startDate&quot;:&quot;2017-10-01&quot;,&quot;unitAmount&quot;:&quot;90&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-11-30&quot;,&quot;key&quot;:&quot;2017-11&quot;,&quot;name&quot;:&quot;Nov17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;90.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;90.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;90&quot;,&quot;plannedCostNoDecimals&quot;:&quot;90&quot;,&quot;plannedPercentage&quot;:&quot;9.000000&quot;,&quot;startDate&quot;:&quot;2017-11-01&quot;,&quot;unitAmount&quot;:&quot;90&quot;},{&quot;actualized&quot;:false,&quot;placementId&quot;:&quot;-1&quot;,&quot;costAdjustment&quot;:&quot;0.00&quot;,&quot;currencyType&quot;:&quot;USD&quot;,&quot;endDate&quot;:&quot;2017-12-31&quot;,&quot;key&quot;:&quot;2017-12&quot;,&quot;name&quot;:&quot;Dec17&quot;,&quot;payableRate&quot;:&quot;1000.0000&quot;,&quot;plannedCost&quot;:&quot;90.00&quot;,&quot;plannedCostAdjusted&quot;:&quot;90.00&quot;,&quot;plannedCostAdjustedNoDecimals&quot;:&quot;90&quot;,&quot;plannedCostNoDecimals&quot;:&quot;90&quot;,&quot;plannedPercentage&quot;:&quot;9.000000&quot;,&quot;startDate&quot;:&quot;2017-12-01&quot;,&quot;unitAmount&quot;:&quot;90&quot;}],&quot;adserverInstance&quot;:{&quot;canSelectConversionTags&quot;:true,&quot;canSelectSSL&quot;:true,&quot;capCostRequired&quot;:true,&quot;campaignNameLength&quot;:255,&quot;adserverDisplayName&quot;:&quot;DCM for SJ&quot;,&quot;adserverType&quot;:&quot;DCM&quot;,&quot;name&quot;:&quot;DCM for SJ&quot;,&quot;adserverId&quot;:&quot;4&quot;,&quot;id&quot;:&quot;3813&quot;,&quot;providerTypeId&quot;:&quot;1&quot;},&quot;buyDetail&quot;:{&quot;activeEndDate&quot;:&quot;2017-12-31&quot;,&quot;activeStartDate&quot;:&quot;2017-01-01&quot;,&quot;buyType&quot;:&quot;Display&quot;,&quot;id&quot;:&quot;5490427&quot;,&quot;client&quot;:{&quot;dualCostEnabled&quot;:false,&quot;billingCurrency&quot;:&quot;&quot;,&quot;budgetCurrency&quot;:&quot;USD&quot;,&quot;businessKey&quot;:&quot;USSJI002&quot;,&quot;clientCode&quot;:&quot;002&quot;,&quot;clientName&quot;:&quot;AUTO-CLIENT-2&quot;,&quot;id&quot;:&quot;54236687&quot;},&quot;estimate&quot;:{&quot;businessKey&quot;:&quot;USSJI002001007&quot;,&quot;estimateCode&quot;:&quot;007&quot;,&quot;estimateEndDate&quot;:&quot;2017-12-31&quot;,&quot;estimateName&quot;:&quot;EST1-JAN1-DEC31-2017 - TEST&quot;,&quot;estimateStartDate&quot;:&quot;2017-01-01&quot;,&quot;id&quot;:&quot;4674670594&quot;},&quot;agencyMedia&quot;:{&quot;mediaCode&quot;:&quot;I&quot;,&quot;mediaName&quot;:&quot;Interactive&quot;,&quot;agencyId&quot;:&quot;1&quot;,&quot;id&quot;:&quot;1&quot;},&quot;product&quot;:{&quot;businessKey&quot;:&quot;${__eval(${supplier_key})&quot;,&quot;productCode&quot;:&quot;001&quot;,&quot;productName&quot;:&quot;AUTO-PD-1&quot;,&quot;id&quot;:&quot;1861440446&quot;}},&quot;supplier&quot;:{&quot;businessKey&quot;:&quot;USSJI09000023&quot;,&quot;mediaCode&quot;:&quot;I&quot;,&quot;supplierCode&quot;:&quot;09000023&quot;,&quot;supplierName&quot;:&quot;GOOGLE.COM&quot;,&quot;zone&quot;:&quot;&quot;,&quot;supplierDiscounts&quot;:[],&quot;id&quot;:&quot;452&quot;}},&quot;actionType&quot;:&quot;save&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/campaign-service/secure/campaign/${cmpid}/moving/moveintonewpackage</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${protocol}://${server}/idesk/mediaplan/?osPspId=prsm-cm-plpb&amp;osCmpId=40007&amp;osEndpointUrl=${protocol}%3A%2F%2F${server}&amp;osViewportVersion=1.28.4&amp;osResourceUrl=${protocol}%3A%2F%2Fpub-resource-viewport-prsm${env}.mediaocean.com%2F&amp;osLang=22&amp;osVref=${protocol}%3A%2F%2F${server}%2Fviewport-home%2F&amp;os-pid=prsm-cm-plpb&amp;os-cid=40007&amp;campaign-id=${pubid}</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="DNT" elementType="Header">
                <stringProp name="Header.name">DNT</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">${__P(includecontroller.prefix)}/TestFragments/TestData/${__P(env_name)}/${key}/MoveIn.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
